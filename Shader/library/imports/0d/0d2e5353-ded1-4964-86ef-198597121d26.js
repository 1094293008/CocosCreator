module.exports = "#ifdef GL_ES\n" + "precision mediump float;\n" + "#endif\n" + "\n" + "// Pygolampis 2\n" + "\n" + "uniform float time;\n" + "uniform vec2 mouse;\n" + "uniform vec2 resolution;\n" + "\n" + "const int numBlobs = 128;\n" + "\n" + "void main( void ) {\n" + "\n" + "	vec2 p = (gl_FragCoord.xy / resolution.x) - vec2(0.5, 0.5 * (resolution.y / resolution.x));\n" + "\n" + "	vec3 c = vec3(0.0);\n" + "	for (int i=0; i<numBlobs; i++)\n" + "	{\n" + "		float px = sin(float(i)*0.1 + 0.5) * 0.4;\n" + "		float py = sin(float(i*i)*0.01 + 0.4*time) * 0.2;\n" + "		float pz = sin(float(i*i*i)*0.001 + 0.3*time) * 0.3 + 0.4;\n" + "		float radius = 0.005 / pz;\n" + "		vec2 pos = p + vec2(px, py);\n" + "		float z = radius - length(pos);\n" + "		if (z < 0.0) z = 0.0;\n" + "		float cc = z / radius;\n" + "		c += vec3(cc * (sin(float(i*i*i)) * 0.5 + 0.5), cc * (sin(float(i*i*i*i*i)) * 0.5 + 0.5), cc * (sin(float(i*i*i*i)) * 0.5 + 0.5));\n" + "	}\n" + "\n" + "	gl_FragColor = vec4(c.x+p.y, c.y+p.y, c.z+p.y, 1.0);\n" + "}\n";